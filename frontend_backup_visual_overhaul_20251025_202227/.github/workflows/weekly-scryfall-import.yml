name: Weekly Scryfall Bulk Import

on:
  schedule:
    # Every Sunday at 2:00 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual triggers

jobs:
  bulk-import:
    name: Import Scryfall Card Data
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Trigger Bulk Import
        run: |
          echo "🚀 Starting weekly Scryfall bulk import..."
          
          # Call the bulk import API endpoint
          response=$(curl -w "%{http_code}" -s -o response.json -X POST \
            -H "x-cron-key: ${{ secrets.CRON_KEY }}" \
            -H "Content-Type: application/json" \
            "${{ secrets.BASE_URL }}/api/cron/bulk-scryfall")
          
          # Check if request was successful
          if [ "$response" -eq 200 ]; then
            echo "✅ Bulk import completed successfully"
            
            # Show results
            imported=$(cat response.json | jq -r '.imported // "unknown"')
            total=$(cat response.json | jq -r '.total_cards // "unknown"')
            final_count=$(cat response.json | jq -r '.final_cache_count // "unknown"')
            
            echo "📊 Results:"
            echo "  • Cards processed: $imported"
            echo "  • Total available: $total"
            echo "  • Final cache size: $final_count"
            
            # Set GitHub environment variables for summary
            echo "IMPORT_SUCCESS=true" >> $GITHUB_ENV
            echo "CARDS_IMPORTED=$imported" >> $GITHUB_ENV
            echo "FINAL_CACHE_COUNT=$final_count" >> $GITHUB_ENV
          else
            echo "❌ Bulk import failed with HTTP $response"
            cat response.json || echo "No response body"
            echo "IMPORT_SUCCESS=false" >> $GITHUB_ENV
            exit 1
          fi

      - name: Create Job Summary
        if: always()
        run: |
          if [ "$IMPORT_SUCCESS" = "true" ]; then
            echo "## ✅ Weekly Scryfall Import Completed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Cards Imported:** $CARDS_IMPORTED" >> $GITHUB_STEP_SUMMARY
            echo "- **Final Cache Size:** $FINAL_CACHE_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- **Status:** Success" >> $GITHUB_STEP_SUMMARY
            echo "- **Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The MTG AI Assistant card cache has been updated with the latest Scryfall data." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Weekly Scryfall Import Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Status:** Failed" >> $GITHUB_STEP_SUMMARY
            echo "- **Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the logs and ensure the API endpoint is accessible." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Notify on Failure
        if: failure()
        run: |
          echo "::warning::Weekly Scryfall bulk import failed. Check logs for details."